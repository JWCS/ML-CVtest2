11/03/016 
PreSpring break; v0.1 completed. Next step fix edge problems with expansion. Effectively, have a gradient function and threshold function in play, as well as a flawed edge tracer: edge thinning & edge following prof said, finish in spring break;

14/03/2016 Decided that the changes to the code would change 100% of it. Instead of preserving old files that I would usurp with newer and better versions, I created a new repository, CVTrial2, and will make that public/github. Effectively little or none of the code will be kept, unless I find a use to copy or paste something. 
14/03/2016 Ok, I think I figured out the order now (for this attempt). First, filter, 3d. Then use a gradient operator (I first used robertson's apparently, now I'm trying sobel's), 3d. I want to take the gradient in 3d so that it will respond better to changes in color, not so in changes in intensity. From Gradient Operator (3d), I convert it into an intensity 2d matrix, with threshold. Then, if I understood this right, I expand the edges, and set up a line following algorithm. I think if I use sobel's I can turn the 2 matricies of 3d color (delX dir, delY dir), into 2 matricies of 2d data: an intensity/magnitude 2d matrix and a directional 2d matrix. Using this second matrix, I think I can write line following code. I will try to begin that on Tues. Also, Ash, if you're reading this, you need to start using github so I can help on your code. 
14/03/2016 Finished EdgeOperator, however I'm not sure about the 255/something scale, or that I should use the intensity fractions for rgb2gray for the magnitude of change for RGB mats to ImMag. Also, it was kinda generically written for multiple types of edge operators, but I'm just planning on using sobels. Threshold will need tweaking. Implementing expansion will be interesting, magnitude or logical? ImDir is in range of [-pi, pi]. Some areas need expansion & line thinning: if we could combine the two with thresholding using ImDir, maybe this could be clean. 
15/03/16 Fixed edge operator to be mean of RGB, it appears better. I haven't fixed xy notation to mn notation, as I'll need for ImDir... Almost finished Expansion, just bug fixing. That notation tho, the real trick here; 
16/03/16 I am not pleased with matlab's notation. What I could seemingly do in one place to lessen computation I appear to be unable to do here. Note: ask someone knowledge able if there is a way to skip past a performance in an array function opperating like a for loop, ex A(:,:) = f(B(:,:)); if B(m,n) = 0 or the like, since 7/8ths of the expansion matrix is zeros and does not need the computation performed on those elements. In anycase, the code for expansion in 8-connectivity works, and quickly(ish) too: around .8 to 1.2 seconds, not sure why the range. Currently main takes around 4.5 seconds. Commiting it now as finished 8-connectivity expansion. Also, I am not sure about rgb2grey intensity, but I like the more absolute change better, so I'm deleting all of that, it works without and should be unnecessary. Lastly, I'm fixing edge operator to actually point in direction of positive m and n, instead of my sudo xy directions. By the time this is commited, there is no obvious problems with that, except I haven't used ImDir yet. 
17/03/16 Begun DirExpansion. Effectively the same as Expansion, most of the code is cp. The difference is a logical mat .* to the new___Vals, where the mat is of points where the initial mat is pointing to. The logical mat I think is best woven into border(:,:). 
18/03/16 Finished DirExpansion. It isn't as tight as it could be, featuring for loops, but it doen't take too long (~2sec per) and works. Wrote an isolated point removal thing, very simple. I think I next need to thin the lines, which might be tedious. Even moreso, now I look, is figuring out the line following algorithm. The DirExpansion works well in the areas it was designed to work in, the areas with incomplete lines, but it covers the area with splotches of pixel groups with blotches of non pixel groups- need to pre-filter out these things. 
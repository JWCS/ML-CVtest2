11/03/016 
PreSpring break; v0.1 completed. Next step fix edge problems with expansion. Effectively, have a gradient function and threshold function in play, as well as a flawed edge tracer: edge thinning & edge following prof said, finish in spring break;

14/03/2016 Decided that the changes to the code would change 100% of it. Instead of preserving old files that I would usurp with newer and better versions, I created a new repository, CVTrial2, and will make that public/github. Effectively little or none of the code will be kept, unless I find a use to copy or paste something. 
14/03/2016 Ok, I think I figured out the order now (for this attempt). First, filter, 3d. Then use a gradient operator (I first used robertson's apparently, now I'm trying sobel's), 3d. I want to take the gradient in 3d so that it will respond better to changes in color, not so in changes in intensity. From Gradient Operator (3d), I convert it into an intensity 2d matrix, with threshold. Then, if I understood this right, I expand the edges, and set up a line following algorithm. I think if I use sobel's I can turn the 2 matricies of 3d color (delX dir, delY dir), into 2 matricies of 2d data: an intensity/magnitude 2d matrix and a directional 2d matrix. Using this second matrix, I think I can write line following code. I will try to begin that on Tues. Also, Ash, if you're reading this, you need to start using github so I can help on your code. 
14/03/2016 Finished EdgeOperator, however I'm not sure about the 255/something scale, or that I should use the intensity fractions for rgb2gray for the magnitude of change for RGB mats to ImMag. Also, it was kinda generically written for multiple types of edge operators, but I'm just planning on using sobels. Threshold will need tweaking. Implementing expansion will be interesting, magnitude or logical? ImDir is in range of [-pi, pi]. Some areas need expansion & line thinning: if we could combine the two with thresholding using ImDir, maybe this could be clean. 